pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'my-jenkins-pps10485285'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Clonar Repositorio') {
            steps {
                git branch: 'main', url: 'https://github.com/JoanLleo/pps10485285.git'
            }
        }

        stage('Crear Imagen Docker') {
            steps {
                dir('RA5/RA5_1/3.2') {
                    sh '''
                        docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f Dockerfile .
                    '''
                }
            }
        }

        stage('Ejecutar Contenedor Docker') {
            steps {
                sh '''
                    docker run -d --name test-jenkins-container \
                    -v $(pwd)/RA5/RA5_1/3.2:/app \
                    ${DOCKER_IMAGE}:${DOCKER_TAG} sleep infinity
                '''
            }
        }

        stage('Ejecutar Pruebas en Docker') {
            steps {
                sh '''
                    docker exec test-jenkins-container bash -c "
                        cd /app &&
                        python3 -m unittest test_calculator.py
                    "
                '''
            }
        }

        stage('Ejecutar Docker Compose') {
            steps {
                dir('RA5/RA5_1/3.2') {
                    sh '''
                        docker compose -f docker-compose.yml up -d --build
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'üßπ Limpiando contenedores y recursos...'
            sh '''
                docker stop test-jenkins-container || true
                docker rm test-jenkins-container || true
                docker compose -f RA5/RA5_1/3.2/docker-compose.yml down || true
            '''
        }
        success {
            echo '‚úÖ Todas las etapas se completaron correctamente.'
        }
        failure {
            echo '‚ùå Ocurri√≥ un error en la canalizaci√≥n.'
        }
    }
}

